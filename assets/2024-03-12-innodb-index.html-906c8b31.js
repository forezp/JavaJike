import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,f as e}from"./app-bff108c1.js";const o={},t=e(`<h2 id="什么是数据库索引" tabindex="-1"><a class="header-anchor" href="#什么是数据库索引" aria-hidden="true">#</a> 什么是数据库索引</h2><p>数据库索引是一种数据结构，用于加速对数据库表中数据的检索。类似于书籍的目录，可以帮助数据库管理系统快速地定位到包含特定值的行，从而提高查询性能。</p><p>数据库索引的主要作用包括以下内容：</p><ol><li>提高查询性能：索引可以加速数据检索过程，使得查询操作更快速高效。</li><li>加速数据排序：如果查询需要对检索出的数据进行排序，索引可以加速排序过程。</li><li>提高唯一性约束：唯一索引可以确保某些列的值是唯一的，防止插入重复的数据。</li></ol><h2 id="innodb存储引擎支持哪些索引" tabindex="-1"><a class="header-anchor" href="#innodb存储引擎支持哪些索引" aria-hidden="true">#</a> innodb存储引擎支持哪些索引</h2><p>InnoDB存储引擎支持多种类型的索引，以下是InnoDB中常见的索引类型：</p><ol><li><strong>主键索引（Primary Key）</strong>： <ul><li>每个InnoDB表都应该有一个主键索引，它唯一标识表中的每一行数据。主键索引可以是单列也可以是多列。</li></ul></li><li><strong>唯一索引（Unique Index）</strong>： <ul><li>唯一索引确保该列中的所有的值是唯一的，允许空值。</li></ul></li><li><strong>普通索引（Normal Index）</strong>： <ul><li>普通索引，用于加速数据检索。普通索引允许有重复的值和空值。</li></ul></li><li><strong>全文索引（Full-Text Index）</strong>： <ul><li>InnoDB从MySQL 5.6版本开始支持全文索引。全文索引可以加快对文本类型（如VARCHAR或TEXT）列的全文搜索。</li></ul></li><li><strong>空间索引（Spatial Index）</strong>： <ul><li>用于地理空间数据类型的索引，支持地理空间数据的查询和分析。</li></ul></li><li><strong>前缀索引（Prefix Index）</strong>： <ul><li>对索引的一部分进行索引，而不是对整个列进行索引。可以通过指定索引长度来创建前缀索引，以减少索引的大小和提高性能。</li></ul></li><li><strong>联合索引（Covering Index）</strong>： <ul><li>包含了查询中涉及的所有列，可以直接满足查询的需求，而无需进一步访问表。这可以提高查询性能，尤其是对于范围查询。</li></ul></li><li><strong>JSON索引</strong>： <ul><li>自MySQL 5.7.8版本起，InnoDB开始支持对JSON类型列的索引。这允许对JSON文档的特定字段进行索引，以便支持JSON数据的快速查询和过滤。</li></ul></li></ol><h2 id="创建索引示例" tabindex="-1"><a class="header-anchor" href="#创建索引示例" aria-hidden="true">#</a> 创建索引示例</h2><p>创建一个表结构，表结构中包含产品名称、价格、描述和地理位置字段，并为不同的字段添加适当的索引。</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> products <span class="token punctuation">(</span>
    id <span class="token keyword">INT</span> <span class="token keyword">AUTO_INCREMENT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span>
    name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    category_id <span class="token keyword">INT</span><span class="token punctuation">,</span>
    price <span class="token keyword">DECIMAL</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    description <span class="token keyword">TEXT</span><span class="token punctuation">,</span>
    location <span class="token keyword">POINT</span><span class="token punctuation">,</span>
    created_at <span class="token keyword">TIMESTAMP</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CURRENT_TIMESTAMP</span><span class="token punctuation">,</span>
    updated_at <span class="token keyword">TIMESTAMP</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CURRENT_TIMESTAMP</span> <span class="token keyword">ON</span> <span class="token keyword">UPDATE</span> <span class="token keyword">CURRENT_TIMESTAMP</span><span class="token punctuation">,</span>
    <span class="token keyword">UNIQUE</span> <span class="token keyword">INDEX</span> name_unique_index <span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token keyword">INDEX</span> category_index <span class="token punctuation">(</span>category_id<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token keyword">INDEX</span> price_index <span class="token punctuation">(</span>price<span class="token punctuation">)</span><span class="token punctuation">,</span>
    FULLTEXT <span class="token keyword">INDEX</span> description_index <span class="token punctuation">(</span>description<span class="token punctuation">)</span><span class="token punctuation">,</span>
    SPATIAL <span class="token keyword">INDEX</span> location_index <span class="token punctuation">(</span>location<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token keyword">INDEX</span> created_at_index <span class="token punctuation">(</span>created_at<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token keyword">INDEX</span> updated_at_index <span class="token punctuation">(</span>updated_at<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token keyword">INDEX</span> name_price_index <span class="token punctuation">(</span>name<span class="token punctuation">,</span> price<span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在这个扩展示例中：</p><ul><li><code>id</code>列作为主键，它是自增的。</li><li><code>name</code>列存储产品名称，并创建了一个唯一索引，确保产品名称是唯一的。</li><li><code>category_id</code>列存储产品类别的ID，并创建了一个普通索引。</li><li><code>price</code>列存储产品价格，并创建了一个普通索引。</li><li><code>description</code>列存储产品描述，并创建了一个全文索引，以便进行全文搜索。</li><li><code>location</code>列存储产品的地理位置坐标，并创建了一个空间索引，以支持地理空间查询。</li><li><code>created_at</code>和<code>updated_at</code>列分别存储产品的创建时间和更新时间，并分别创建了普通索引。</li><li><code>name_price_index</code>是一个联合索引，组合了产品名称和价格两列，以支持按名称和价格进行查询。</li></ul><figure><img src="https://static-1254191423.cos.ap-shanghai.myqcloud.com/img/common/wxcode.png" alt="方志朋_官方公众号" tabindex="0" loading="lazy"><figcaption>方志朋_官方公众号</figcaption></figure>`,13),i=[t];function p(l,c){return s(),a("div",null,i)}const r=n(o,[["render",p],["__file","2024-03-12-innodb-index.html.vue"]]);export{r as default};
