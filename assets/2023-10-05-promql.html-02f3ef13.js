import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{o as t,c as a,f as i}from"./app-8e82631f.js";const l={},s=i(`<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>lang: zh-CN
title: Prometheus的数据模型
headerDepth: 0
description: Prometheus数据模型
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>prometheus的时间序列是通过指标名和一组标签来唯一定义。指标的名称是监控样本的标识，而标签组是监控样本的多个维度特征的反应，所以可以通过标签进行对指标的筛选、过滤、聚合、转换等计算，计算的结果会产生一条新的时间序列。</p><p>promql是Prometheus提供的数据查询语言，可以对时间序列提供丰富的查询。promql被广泛应用于指标视图的配置、告警语句的配置，它是一个基础能力，类似于mysql的sql查询语句。</p><h3 id="瞬时向量查询-instant-vector-selectors" tabindex="-1"><a class="header-anchor" href="#瞬时向量查询-instant-vector-selectors" aria-hidden="true">#</a> 瞬时向量查询（Instant vector selectors）</h3><p>我们可以直接输入指标名查询所有的这个指标名的时间序列，比如：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>prometheus_http_requests_total
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>上面的语句等同于：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>prometheus_http_requests_total
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>可以在grafana上查询，获取了prometheus_http_requests_total指标的不同标签维度的所有指标，一共有53个。</p><figure><img src="https://static.javajike.com/img/2023/10/14/image-20231014210829763.png" alt="image-20231014210829763" tabindex="0" loading="lazy"><figcaption>image-20231014210829763</figcaption></figure><p>可以筛选出handler=“/metrics&quot;接口的数据，在grafana执行：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>prometheus_http_requests_total{handler=&quot;/metrics&quot;}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://static.javajike.com/img/2023/10/14/image-20231014210912914.png" alt="image-20231014210912914" tabindex="0" loading="lazy"><figcaption>image-20231014210912914</figcaption></figure><p>另外也可以筛选出handler!=“/metrics&quot;的所有的数据，查询语句为：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>prometheus_http_requests_total{handler!=&quot;/metrics&quot;}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>也可以使用多个标签值进行进行查询，比如查询handler为&quot;/metrics“和handler为&quot;/api/v1/labels&quot;的指标情况：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>prometheus_http_requests_total{handler=~&quot;/metrics|/api/v1/labels&quot;}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>同理，也查询handler不为&quot;/metrics“和handler不为&quot;/api/v1/labels&quot;的指标情况：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>prometheus_http_requests_total{handler!~&quot;/metrics|/api/v1/labels&quot;}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>也可以使用<code>.*</code>通配符进行模糊匹配查询：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>prometheus_http_requests_total{handler=~&quot;/metric.*&quot;}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>小结：</p><p>使用标签筛选数据的使用，可以使用完全匹配：</p><ul><li>label = value</li><li>lable =~ value | value2</li></ul><p>也可以进行模糊匹配：</p><ul><li>label =~ value.*</li></ul><p>取反操作</p><ul><li>label != value</li><li>Label !~ value1 |value2</li><li>Label !~ value.*</li></ul><h2 id="范围矢量查询-range-vector-selectors" tabindex="-1"><a class="header-anchor" href="#范围矢量查询-range-vector-selectors" aria-hidden="true">#</a> 范围矢量查询（Range Vector Selectors）</h2><p>通过Instant vector selectors查询，返回值只会包含该时间序列的最新值的一个样本，它是一个瞬时向量结果。如果我们想查询一个时间区间的样本，可以使用范围矢量查询。范围向量表达式和瞬时向量表达式之间的差异在于在区间向量表达式中我们需要定义时间选择的范围，时间范围通过时间范围选择器<code>[]</code>进行定义。例如，通过以下表达式可以选择最近5分钟内的所有样本数据：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>prometheus_http_requests_total{handler=&quot;/metrics&quot;}[5m]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://static.javajike.com/img/2023/10/14/image-20231014211256244.png" alt="image-20231014211256244" tabindex="0" loading="lazy"><figcaption>image-20231014211256244</figcaption></figure><p>时间范围</p><p>除了使用m表示分钟以外，PromQL的时间范围选择器支持其它时间单位：</p><ul><li></li></ul><p>s - 秒</p><ul><li></li></ul><p>m - 分钟</p><ul><li></li></ul><p>h - 小时</p><ul><li></li></ul><p>d - 天</p><ul><li></li></ul><p>w - 周</p><ul><li></li></ul><p>y - 年</p>`,46),r=[s];function n(d,u){return t(),a("div",null,r)}const p=e(l,[["render",n],["__file","2023-10-05-promql.html.vue"]]);export{p as default};
